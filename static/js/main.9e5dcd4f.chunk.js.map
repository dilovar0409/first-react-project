{"version":3,"sources":["logo.svg","Components/Dictionary/style.js","Components/Dictionary/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["YandexText","styled","p","DictionaryWrapper","div","DictionDiv","DictionP1","DictionaryInput","input","DictionP","DictionaryPost","PostPage","PostPage2","Dictionary","useState","state","setState","onChange","e","axios","get","target","value","then","res","data","catch","err","console","log","type","placeholder","def","map","index","text","pos","ts","tr","gen","syn","fr","mean","ex","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,I,4CCEFA,EAAWC,IAAOC,EAAR,uPAYVC,EAAoBF,IAAOG,IAAV,mMAWjBC,EAAaJ,IAAOG,IAAV,iNAUVE,EAAYL,IAAOC,EAAV,oMASTK,EAAkBN,IAAOO,MAAV,qLAUfC,EAAWR,IAAOC,EAAV,6HAORQ,EAAiBT,IAAOG,IAAV,+CAIdO,EAASV,IAAOG,IAAR,0GAaRQ,GAPUX,IAAOG,IAAR,qIAOCH,IAAOG,IAAR,yM,OCPPS,MAnEf,WAAuB,IAAD,EAElB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OACI,gCACI,cAAChB,EAAD,gCACA,eAACG,EAAD,WACI,eAACE,EAAD,WACI,cAACC,EAAD,6CACA,cAACC,EAAD,CAAiBU,SAtBX,SAACC,GAKnBC,IACKC,IADL,0EADI,sFACJ,4BAEqGF,EAAEG,OAAOC,QAEzGC,MAAK,SAACC,GACHR,EAASQ,EAAIC,SAEhBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,OASkCG,KAAK,OAAOC,YAAY,mCAEtE,cAACnB,EAAD,oBAAYG,EAAMiB,WAAlB,aAAY,EAAWC,KAAI,WAAwBC,GAAxB,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,GAAIC,EAAlB,EAAkBA,GAAlB,OACvB,eAAC5B,EAAD,WACI,eAACC,EAAD,WACI,cAACF,EAAD,UAAW0B,IACX,kCAAKE,EAAL,OACA,4BAAID,OAER,mCAAIE,QAAJ,IAAIA,OAAJ,EAAIA,EAAIL,KAAI,WAAwCC,GAAxC,IAAGC,EAAH,EAAGA,KAAWI,GAAd,EAASH,IAAT,EAAcG,KAASC,GAAvB,EAAmBC,GAAnB,EAAuBD,KAAKE,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,GAAlC,OACR,gCACI,eAAChC,EAAD,WACI,eAACA,EAAD,WACI,cAACA,EAAD,UAAWwB,IACX,eAACxB,EAAD,eAAY4B,EAAZ,WAHR,OAKKC,QALL,IAKKA,OALL,EAKKA,EAAKP,KAAI,WAAyBC,GAAzB,IAAGC,EAAH,EAAGA,KAAWI,GAAd,EAASH,IAAT,EAAcG,KAAd,EAAmBE,GAAnB,OACN,eAAC9B,EAAD,WACI,4BAAIwB,IACJ,kCAAKI,EAAL,iBAIZ,eAAC5B,EAAD,sBAAY+B,QAAZ,IAAYA,OAAZ,EAAYA,EAAMT,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OAClB,cAACxB,EAAD,UAAWwB,OADf,OAGA,qCAAMQ,QAAN,IAAMA,OAAN,EAAMA,EAAIV,KAAI,WAAeC,GAAf,IAAGC,EAAH,EAAGA,KAAMG,EAAT,EAASA,GAAT,OACV,gCACI,4BAAIH,IACJ,4BAAIG,EAAGH,sCCjDhCS,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e5dcd4f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from \"styled-components\";\r\n\r\nexport const YandexText=styled.p`\r\n    width: fit-content;\r\n    margin: auto;\r\n    font-size: 60px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    color: red;\r\n    padding: 0px 15px 5px 15px;\r\n    background-color: white ;\r\n    margin-top: 15px;\r\n`;\r\n\r\nexport const DictionaryWrapper = styled.div`\r\n    width: 1100px;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: space-between;  \r\n    padding: 20px 0;\r\n    p{\r\n    background-color: #ffbf2b;\r\n    }\r\n`;\r\n\r\nexport const DictionDiv = styled.div`\r\n    width: 500px;\r\n    height: 150px;\r\n    border: 1px solid lightgray;\r\n    background-color: white;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    border: 3px solid #ffbf2b;\r\n`;\r\n\r\nexport const DictionP1 = styled.p`\r\n    width: fit-content;\r\n    border: 1px solid black;\r\n    padding: 4px 13px;\r\n    margin-bottom: 10px;\r\n    background-color: white !important;\r\n    font-size: 14px;\r\n`;\r\n\r\nexport const DictionaryInput = styled.input`\r\n    width: 300px;\r\n    height: 25px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    background-color: white;\r\n`;\r\n\r\nexport const DictionP = styled.p`\r\n    font-size: 19px;\r\n    font-weight: bold;\r\n    color: black;\r\n    background-color: #ffbf2b;\r\n`;\r\n\r\nexport const DictionaryPost = styled.div`\r\n    width: 590px;\r\n`;\r\n\r\nexport const PostPage=styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #ffbf2b;\r\n`;\r\n\r\nexport const PostPage1=styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: white;\r\n`;\r\n\r\nexport const PostPage2=styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 20px;\r\n    background-color: #ffbf2b;\r\n    color: white;\r\n    border-radius: 10px;\r\n    margin-left: 20px;\r\n`;","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { DictionaryInput, DictionaryPost, DictionaryWrapper, DictionDiv, DictionP, DictionP1, PostPage, PostPage2, YandexText } from './style';\r\n\r\nfunction Dictionary() {\r\n\r\n    const [state, setState] = useState({})\r\n\r\n    const getDictionary = (e) => {\r\n        // console.log(\"change\");\r\n        // console.log(e.target.value);\r\n        const apiKey =\r\n            \"dict.1.1.20210915T143839Z.96e17f7f60ad28d4.e1bf52d3b734ee95be20a7e82dfe268e2601fce7\";\r\n        axios\r\n            .get(\r\n                `https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=${apiKey}&lang=en-ru&text=${e.target.value}`\r\n            )\r\n            .then((res) => {\r\n                setState(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <YandexText>Yandex Dictionary</YandexText>\r\n            <DictionaryWrapper>\r\n                <DictionDiv>\r\n                    <DictionP1> English → Russian ↓</DictionP1>\r\n                    <DictionaryInput onChange={getDictionary} type=\"text\" placeholder=\"Type something to translate\" />\r\n                </DictionDiv>\r\n                <PostPage2>{state.def?.map(({ text, pos, ts, tr }, index) => (\r\n                    <DictionaryPost>\r\n                        <PostPage>\r\n                            <DictionP>{text}</DictionP>\r\n                            <p>[{ts}]</p>\r\n                            <p>{pos}</p>\r\n                        </PostPage>\r\n                        <p>{tr?.map(({ text, pos, gen, fr, syn, mean, ex }, index) => (\r\n                            <div>\r\n                                <PostPage>\r\n                                    <PostPage>\r\n                                        <PostPage>{text}</PostPage>\r\n                                        <PostPage>({gen}),</PostPage>\r\n                                    </PostPage>\r\n                                    {syn?.map(({ text, pos, gen, fr }, index) => (\r\n                                        <PostPage>\r\n                                            <p>{text}</p>\r\n                                            <p>({gen}),</p>\r\n                                        </PostPage>\r\n                                    ))}\r\n                                </PostPage>\r\n                                <PostPage>({mean?.map(({ text }, index) => (\r\n                                    <PostPage>{text}</PostPage>\r\n                                ))})</PostPage>\r\n                                <div>{ex?.map(({ text, tr }, index) => (\r\n                                    <div>\r\n                                        <p>{text}</p>\r\n                                        <p>{tr.text}</p>\r\n                                    </div>\r\n                                ))}</div>\r\n                            </div>\r\n                        ))}</p>\r\n                    </DictionaryPost>\r\n                ))}</PostPage2>\r\n            </DictionaryWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dictionary;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Dictionary from './Components/Dictionary/index.jsx';\n\nfunction App() {\n  return (\n    <Dictionary />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}